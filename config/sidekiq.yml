:queues:
  - default
  - expired_bonuses
  - expired_live
  - expired_prematch
  - radar_odds_feed_high
  - radar_odds_feed_low
  - radar_event_scopes_creating
  - radar_event_scopes_loading
  - radar_live_coverage_booking
  - radar_markets_update
  - radar_missing_heartbeat
  - scheduled_events_caching
  - mq

:schedule:
  expiring_bonuses:
    every: <%= ENV.fetch('EXPIRING_BONUSES_INTERVAL', '1d') %>
    class: Scheduled::ExpiringBonusesWorker
    queue: expired_bonuses
    enabled: <%= ['production', 'staging'].include?(ENV['RACK_ENV']) %>

  mts_live_validation:
    every: <%= "#{ENV.fetch('MTS_LIVE_VALIDATION_TIMEOUT_SECONDS', 10)}s" %>
    class: Scheduled::ExpiringLiveWorker
    queue: expired_live
    enabled: <%= ['production', 'staging'].include?(ENV['RACK_ENV']) %>

  mts_prematch_validation:
    every: <%= "#{ENV.fetch('MTS_PREMATCH_VALIDATION_TIMEOUT_SECONDS', 3)}s" %>
    class: Scheduled::ExpiringPrematchWorker
    queue: expired_prematch
    enabled: <%= ['production', 'staging'].include?(ENV['RACK_ENV']) %>

  missing_heartbeat_check:
    include_metadata: true
    every: <%= ENV.fetch('MISSING_HEARTBEAT_CHECK_INTERVAL', '20s') %>
    class: Radar::MissingHeartbeatWorker
    enabled: <%= ['production', 'staging'].include?(ENV['RACK_ENV']) %>

  pre_match_markets_closing:
    every: <%= ENV.fetch('PRE_MATCH_MARKETS_CLOSING_TIMEOUT', '5m') %>
    class: PreMatchMarketsClosingWorker
    enabled: <%= ['production', 'staging'].include?(ENV['RACK_ENV']) %>

  radar_event_scopes_loading:
    every: <%= ENV.fetch('RADAR_EVENT_SCOPES_LOADING_INTERVAL', '1w') %>
    class: Radar::EventScopesLoadingWorker
    enabled: <%= ['production', 'staging'].include?(ENV['RACK_ENV']) %>

  radar_market_templates_update:
    every: <%= ENV.fetch('RADAR_MARKET_TEMPLATES_UPDATE_INTERVAL', '1w') %>
    class: Radar::MarketsUpdateWorker
    enabled: <%= ['production', 'staging'].include?(ENV['RACK_ENV']) %>

  unpopular_live_events_clean_up:
    every: <%= ENV.fetch('UNPOPULAR_LIVE_EVENTS_CLEAN_UP_INTERVAL', '1h') %>
    class: UnpopularLiveEventsCleanUpWorker
    enabled: <%= ['production', 'staging'].include?(ENV['RACK_ENV']) %>

  unpopular_pre_live_events_clean_up:
    every: <%= ENV.fetch('UNPOPULAR_PRE_LIVE_EVENTS_CLEAN_UP_INTERVAL', '1h') %>
    class: UnpopularPreLiveEventsCleanUpWorker
    enabled: <%= ['production', 'staging'].include?(ENV['RACK_ENV']) %>

  customer_lock_table_clean_up:
    every: <%= ENV.fetch('CUSTOMER_LOCK_TABLE_CLEAN_UP_INTERVAL', '1d') %>
    class: CustomerLockTableCleanupWorker
    enabled: <%= ['production', 'staging'].include?(ENV['RACK_ENV']) %>

  event_archivation:
    every: <%= ENV.fetch('EVENT_ARCHIVATION_INTERVAL', '1d') %>
    class: EventArchivationWorker
    enabled: <%= ['production', 'staging'].include?(ENV['RACK_ENV']) %>

  cache_event_based_data:
    every: <%= ENV.fetch('CACHE_EVENT_BASED_DATA_INTERVAL', '1d') %>
    class: Radar::ScheduledEvents::EventScheduleLoadingWorker
    enabled: <%= ['production', 'staging'].include?(ENV['RACK_ENV']) %>
