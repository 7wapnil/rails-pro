:schedule:
  missing_heartbeat_worker:
    cron: <%= "#{ENV.fetch('MISSING_HEARTBEAT_WATCHDOG_CRON') { '0 * * * *' }}" %>
    class: Radar::MissingHeartbeatWorker
    queue: critical

  radar_event_scopes_loading:
    every: <%= ENV.fetch('RADAR_EVENT_SCOPES_LOADING_INTERVAL', '1w') %>
    class: Radar::EventScopesLoadingWorker
    enabled: <%= ['production', 'staging'].include?(ENV['RACK_ENV']) %>

  regular_market_templates_update:
    cron: <%= ENV.fetch('MARKET_TEMPLATES_UPDATE_CRON') { "0 20 * * 6" } %>
    class: Radar::MarketsUpdateWorker
    queue: market_templates_update

  check_bet_expirasy_live:
    every: <%= "#{ENV.fetch('MTS_LIVE_VALIDATION_TIMEOUT') { 10 }}s" %>
    class: Scheduled::ExpiringLiveWorker
    queue: expired_live

  check_bet_expirasy_prematch:
    every: <%= "#{ENV.fetch('MTS_PREMATCH_VALIDATION_TIMEOUT') { 3 }}s" %>
    class: Scheduled::ExpiringPrematchWorker
    queue: expired_prematch

  pre_match_markets_closing:
    every: <%= ENV.fetch('PRE_MATCH_MARKETS_CLOSING_INTERVAL', '5m') %>
    class: PreMatchMarketsCloseWorker
    enabled: <%= ['production', 'staging'].include?(ENV['RACK_ENV']) %>

  unpopular_live_events_clean_up:
    every: <%= ENV.fetch('UNPOPULAR_LIVE_EVENTS_CLEAN_UP_INTERVAL', '1h') %>
    class: UnpopularLiveEventsCleanUpWorker
    enabled: <%= ['production', 'staging'].include?(ENV['RACK_ENV']) %>

  unpopular_pre_live_events_clean_up:
    every: <%= ENV.fetch('UNPOPULAR_PRE_LIVE_EVENTS_CLEAN_UP_INTERVAL', '1h') %>
    class: UnpopularPreLiveEventsCleanUpWorker
    enabled: <%= ['production', 'staging'].include?(ENV['RACK_ENV']) %>
