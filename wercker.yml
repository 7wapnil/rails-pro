box:
  id: arcanebet/arcanebet
  username: $DOCKERHUB_USERNAME
  password: $DOCKERHUB_PASSWORD
  tag: base

services:
  - postgres
  - mongo:3.6

build:
  steps:
    - bundle-install
    - bashaus/yarn-install

    - script:
      name: prepare database
      code: rake db:test:prepare

    - script:
      name: rspec
      code: bundle exec rspec

    - script:
      name: rubocop
      code: bundle exec rubocop

    - script:
      name: brakeman
      code: bundle exec brakeman -q

    - script:
      name: eslint
      code: yarn run eslint .

  after-steps:
    - slack-notifier:
      url: $SLACK_URL
      notify_on: failed

store:
  steps:
    - script:
      name: bundle-install
      code: bundle install

    - bashaus/yarn-install

    - script:
      name: compile-assets
      code: bundle exec rake assets:precompile

    - internal/docker-push:
      username: $DOCKERHUB_USERNAME
      password: $DOCKERHUB_PASSWORD
      repository: arcanebet/arcanebet
      tag: $WERCKER_GIT_COMMIT

  after-steps:
    - slack-notifier:
      url: $SLACK_URL
      notify_on: failed

deploy:
  box: python:3.6-alpine

  steps:
    - script:
      name: install-linux-deps
      code: apk add -qU openssh git curl

    - capgemini/terraform-install:
      version: "0.11.8"

    - edgecaseadmin/install-aws-cli:
      key: $AWS_ACCESS_KEY_ID
      secret: $AWS_SECRET_ACCESS_KEY
      region: $AWS_DEFAULT_REGION

    - add-ssh-key:
      keyname: GITHUB

    - script:
      name: add-github-to-known-hosts
      code: ssh-keyscan github.com >> /root/.ssh/known_hosts

    - script:
      name: clone-terraform-config
      code: |
        rm -rf $TERRAFORM_CONFIG_DIR
        git clone \
            git@github.com:arcanebet/infrastructure.git \
            $TERRAFORM_CONFIG_DIR

    - script:
      name: update-image-tag
      code: |
        aws ssm put-parameter \
            --name /backend/tag \
            --value $WERCKER_GIT_COMMIT \
            --type SecureString \
            --overwrite

    - script:
      name: terraform-apply
      code: |
        cd $TERRAFORM_CONFIG_DIR/terraform/services/backend-web
        terraform init
        terraform workspace select $TARGET_ENV
        terraform apply -auto-approve

        cd $TERRAFORM_CONFIG_DIR/terraform/services/backend-worker
        terraform init
        terraform workspace select $TARGET_ENV
        terraform apply -auto-approve

        cd $TERRAFORM_CONFIG_DIR/terraform/services/backend-listener
        terraform init
        terraform workspace select $TARGET_ENV
        terraform apply -auto-approve

  after-steps:
    - slack-notifier:
      url: $SLACK_URL
