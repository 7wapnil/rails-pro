.row.mt-4
  .col-8.offset-2
    = card header: t('entities.events', count: 1), class: 'events-info mb-3' do
      %table.table
        %tr
          %td= 'Name'
          %td= @event.name
        %tr
          %td= 'Title'
          %td= @event.title.name
        %tr
          %td= 'Description'
          %td= @event.description
        %tr
          %td= 'Start at'
          %td= @event.start_at ? l(@event.start_at, format: :long) : '-'
        %tr
          %td= 'End at'
          %td= @event.end_at ? l(@event.end_at, format: :long) : '-'
        %tr
          %td= 'Status'
          %td= @event.status
        %tr
          %td='Bets'
          %td= @event.bets.count
        %tr
          %td= 'Wager'
          %td= @event.wager
        %tr
          %td= 'Live coverage'
          %td= status_badge(@event.traded_live ? 'live' : 'offline')
        %tr
          %td= 'Priority'
          %td= select_tag :priority, options_for_select(Event::PRIORITIES, @event.priority),
                                    class: 'priority_toggle form-control-sm',
                                    data: { endpoint: event_path(@event),
                                            resource: 'event',
                                            initial_value: @event.priority }
        %tr
          %td= 'Scopes'
          %td
            %ul.list-unstyled
              - @event.event_scopes.each do |scope|
                %li
                  %b= "#{scope.kind}:"
                  %span= scope.name
        %tr
          %td Visible
          %td= visibility_toggle(@event, update_visibility_event_path(@event))
      %hr
      = link_back

    = card header: t('entities.markets'), class: 'markets-info' do
      %table.table
        %thead
          %tr
            %th= 'Name'
            %th= 'Status'
            %th= 'Priority'
            %th= 'Visibility'
        %tbody
          - @event.markets.order(:priority, :name).each do |market|
            %tr
              %td= market.name
              %td= market.status
              %td
                = select_tag :priority, options_for_select(Market::PRIORITIES, market.priority),
                 class: 'priority_toggle',
                 data: { endpoint: event_market_path(@event, market),
                         resource: 'market',
                         initial_value: market.priority }
              %td= visibility_toggle(market, update_visibility_market_path(market))
- content_for :js do
  = javascript_pack_tag 'priority_toggle', 'data-turbolinks-track': 'reload'
  = javascript_pack_tag 'visibility_toggle', 'data-turbolinks-track': 'reload'
- content_for :css do
  = stylesheet_pack_tag 'css/visibility_toggle'
